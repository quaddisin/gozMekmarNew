{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-7ba5bd90\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"columns\"\n};\nconst _hoisted_2 = {\n  class: \"column\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_sidebar_menu = _resolveComponent(\"sidebar-menu\");\n\n  const _component_router_view = _resolveComponent(\"router-view\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_sidebar_menu, {\n    menu: $data.menu,\n    \"onUpdate:collapsed\": $options.onToggleCollapse,\n    onItemClick: $options.onItemClick\n  }, null, 8\n  /* PROPS */\n  , [\"menu\", \"onUpdate:collapsed\", \"onItemClick\"])]), _createElementVNode(\"div\", {\n    class: _normalizeClass([$data.toggleCollapsed ? _ctx.toggleCollapsedFalse : _ctx.toggleCollapsedTrue])\n  }, [_createVNode(_component_router_view)], 2\n  /* CLASS */\n  )]);\n}","map":{"version":3,"mappings":";;;;;EACOA,KAAK,EAAC;;;EACJA,KAAK,EAAC;;;;;;;uBADbC,oBAOM,KAPN,cAOM,CANJC,oBAEM,KAFN,cAEM,CADJC,aAA4FC,uBAA5F,EAA4F;IAA7EC,IAAI,EAAEC,UAAuE;IAAhE,sBAAkBC,yBAA8C;IAA3BC,WAAU,EAAED;EAAe,CAA5F;;EAAA,gDACI,CAFN,CAMI,EAHJL,oBAEM,KAFN,EAEM;IAFAF,KAAK,mBAAGM,wBAAkBG,yBAAlB,GAAyCA,wBAA5C;EAEL,CAFN,GACEN,aAA2BO,sBAA3B,EADF;;EAAA,CAGI,CAPN","names":["class","_createElementBlock","_createElementVNode","_createVNode","_component_sidebar_menu","menu","$data","$options","onItemClick","_ctx","_component_router_view"],"sourceRoot":"","sources":["C:\\Users\\leona\\newgozmekmar\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"columns\">\n    <div class=\"column\">\n      <sidebar-menu :menu=\"menu\" @update:collapsed=\"onToggleCollapse\" @item-click=\"onItemClick\" />\n    </div>\n    <div :class=\"[toggleCollapsed ? toggleCollapsedFalse : toggleCollapsedTrue]\">\n      <router-view></router-view>\n    </div>\n  </div>\n\n\n\n\n\n</template>\n\n<script>\nimport { SidebarMenu } from 'vue-sidebar-menu'\nimport 'vue-sidebar-menu/dist/vue-sidebar-menu.css'\nexport default {\n  props: {\n    // Sidebar menu (required)\n\n    // Sidebar Collapse state (v-model:collapsed to enable two-way data binding)\n    collapsed: {\n      type: Boolean,\n      default: false\n    },\n\n    // Sidebar width (expanded)\n    width: {\n      type: String,\n      default: '290px'\n    },\n\n    // Sidebar width (collapsed)\n    widthCollapsed: {\n      type: String,\n      default: '65px'\n    },\n\n    // Keep only one child opened at a time (first level only)\n    showOneChild: {\n      type: Boolean,\n      default: false\n    },\n\n    // Keep all child open\n    showChild: {\n      type: Boolean,\n      default: false\n    },\n\n    // Sidebar right to left\n    rtl: {\n      type: Boolean,\n      default: false\n    },\n\n    // Make sidebar relative to the parent (by default the sidebar is relative to the viewport)\n    relative: {\n      type: Boolean,\n      default: false\n    },\n\n    // Hide toggle collapse btn\n    hideToggle: {\n      type: Boolean,\n      default: false\n    },\n\n    // Sidebar theme (available themes: 'white-theme')\n    theme: {\n      type: String,\n      default: ''\n    },\n\n    // Disable hover on collapse mode\n    disableHover: {\n      type: Boolean,\n      default: false\n    },\n\n    // The name of the custom link component (must be registered globally and define item as a prop)\n    linkComponentName: {\n      type: String,\n      default: undefined\n    }\n  },\n  data() {\n    return {\n      menu: [\n        {\n          header: 'Main Navigation',\n          hiddenOnCollapse: true\n        },\n        {\n          href: '/',\n          title: 'Ana Sayfa',\n          icon: 'fa fa-user'\n        },\n        {\n          href: '/login',\n          title: 'Login',\n          icon: 'fa fa-user'\n        },\n        {\n          title: 'Siparişler',\n          icon: 'fa fa-chart-area',\n          child: [\n            {\n              href: '/siparisler/uretim',\n              title: 'Üretim'\n            },\n            {\n              href: '/siparisler/sevk',\n              title: 'Sevk'\n            },\n            {\n              href: '/siparisler/bekleyen',\n              title: 'Bekleyen'\n            }\n          ]\n        }\n      ],\n      toggleCollapsed:false,\n    }\n  },\n  watch: {\n   \n  },\n  methods: {\n    onToggleCollapse(collapsed) { \n      this.toggleCollapsed = collapsed\n    },\n    onItemClick(event, item) {\n      console.log(event,item)\n     }\n    \n\n\n\n  },\n  computed: {\n    \n\n\n  },\n  beforeUpdate() {\n    \n  },\n  components: {\n    SidebarMenu\n  },\n  created() {\n\n  },\n  mounted() {\n    \n  }\n}\n</script>\n\n<style scoped>\n  .toggleCollapsedFalse{\n    width:80%;\n    height:auto;\n    margin-left:25%;\n  }\n    .toggleCollapsedTrue {\n      width: 95%;\n      height: auto;\n      margin-left: 15%;\n    }\n</style>\n"]},"metadata":{},"sourceType":"module"}